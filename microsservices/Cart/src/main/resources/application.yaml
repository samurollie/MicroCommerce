server:
  port: 8085

spring:
  application:
    name: cart-service

  # --- Configura��o do Banco de Dados (PostgreSQL) ---
  datasource:
    url: jdbc:postgresql://localhost:5432/cart_db
    username: cart
    password: cart
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # --- Configura��o de Seguran�a (OAuth2 Resource Server - JWT) ---
  security:
    oauth2:
      resourceserver:
        # Aponta para 'customers-service' (auth) que esta na porta 8086
        jwt:
          issuer-uri: ${AUTH_SERVICE_URL:http://localhost:8086}/api/auth
          jwk-set-uri: ${AUTH_SERVICE_URL:http://localhost:8086}/api/auth/certs

# --- Service Discovery (Exemplo com Eureka) ---
# Se voc� estiver usando Eureka e o gateway tamb�m, descomente e configure.
# Caso contr�rio, as URLs diretas abaixo ser�o usadas.
# eureka:
#   client:
#     serviceUrl:
#       defaultZone: http://localhost:8761/eureka/ # Endere�o do seu Eureka server
#     register-with-eureka: true
#     fetch-registry: true

# --- Configura��o para chamadas ao catalogue-service ---
services:
  customers:
    url: ${AUTH_SERVICE_URL:http://localhost:8086}
  catalogue:
      url: ${CATALOGUE_SERVICE_URL:http://localhost:8084}


logging:
  level:
    org.springframework.security: DEBUG
    com.microcommerce.cart: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    com.microcommerce.cart.client.CatalogueClient: DEBUG
    com.microcommerce.cart.client.CustomerClient: DEBUG